.root {
  user-select: none;
  color: white;

  position: relative;

  textarea {
    font-family: monospace;
    padding: 8px;
  }
  textarea,
  button {
    background: black;
    color: white;
    border: 1px solid white;
    resize: none;
    border-radius: 2px;
    &:focus {
      outline: none;
      border: 1px solid #faa719;
    }
    &::placeholder {
      color: #666;
    }
  }
  button {
    padding: 4px 8px;
  }

  textarea {
    width: 100%;
    padding: 8px;
    max-width: 450px;
  }

  del {
    color: rgba(255, 255, 255, 0.5);
  }
}

.isSubmitLoading {
  opacity: 0.6;

  // i had issues with disabled=true, so I just added pointer-events: none
  & button {
    pointer-events: none;
  }
}

.closeBtn {
  position: absolute;
  left: -35px;
  transition: opacity 150ms 50ms;
  opacity: 0;
  pointer-events: none;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  &.expanded {
    opacity: 0.5;
    pointer-events: all;
  }
  &:hover {
    opacity: 0.75;
  }
  &:active {
    opacity: 1;
  }
}

.questionInput {
  height: 36px;
  overflow: hidden;
}
.questionInput.expanded {
  height: 100px;
  resize: vertical;
}
.questionInput.expanding {
  transition: height 200ms cubic-bezier(0.4, 0, 0.2, 1);
}
.questionInput::placeholder {
  transition: opacity 100ms linear;
}
.questionInput:focus::placeholder {
  opacity: 0;
}

.bottomContainer {
  opacity: 0;
  pointer-events: none;
  margin-bottom: 36px;
  transition: opacity 50ms 0ms cubic-bezier(0.4, 0, 0.2, 1),
    height 200ms cubic-bezier(0.4, 0, 0.2, 1);
}
.bottomContainer.expanded {
  transition: opacity 100ms 70ms cubic-bezier(0.4, 0, 0.2, 1),
    height 200ms cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 1;
  pointer-events: all;
}

.notifyHeader {
  font-family: 'Roboto Slab';
  font-size: 20px;
}

.notifyMethod {
  height: 36px;
  display: flex;
  align-items: center;

  input[type='checkbox'] {
    appearance: none;
    width: 16px;
    height: 16px;
    margin-right: 10px;
    background-color: black;
    border: 1px solid white;
    &:focus:not(.noCheckboxFocus) {
      outline: none;
      border: 1px solid #faa719;
    }
    &:checked::after {
      display: block;
      content: ' ';
      width: 17px;
      height: 14px;
      background-image: url(./Check.svg);
      z-index: 100;
      position: relative;
    }
  }
}

.sendContainer {
  margin-top: 6px;
}

.waitingForPushNotif {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.2);
  z-index: 10000;
}

.waitingForPushNotifBlur {
  filter: blur(1.2px);
}

.permissionDenied {
  color: #ff3a32;
}

$emailFormEase: cubic-bezier(0.3, 0, 0, 1);
$emailFormTime: 250ms;

.emailForm {
  // transition: background-color 150ms linear;
  border: 1px solid transparent;
  padding-right: 18px;

  .content {
    display: flex;
    width: 250px;
    align-items: center;
    display: flex;
    height: 2em;

    transition: transform $emailFormTime $emailFormEase 50ms;
  }

  &:focus {
    outline: none;
    border: 1px solid #faa719;
  }

  &.selected {
    background: black;
    border: 1px solid white;

    .content {
      transition: transform $emailFormTime $emailFormEase 0ms;

      transform: translateX(9px);
    }
  }

  &.focused {
    border: 1px solid #faa719;
  }

  input[type='email'] {
    font-family: Hack, monospace;
    color: #faa719;
    border: none;
    border-radius: 0px;
    height: 100%;
    padding: 0;
    background: none;
    appearance: none;

    &::placeholder {
      color: #666;
      font-family: Inter;
    }

    &:focus {
      outline: none;
    }
  }
}

.sendFailure {
  color: #ff3a32;
}

.successContainer {
  transform: translateY(-20px);
  margin-bottom: 150px;
  .link {
    color: #faa719 !important;
    &:hover {
      color: #ff3a32 !important;
    }
  }
}
.sentTitle {
  font-size: 48px;
  color: #51d064;
}
.emailCode {
  color: #faa719;
}
